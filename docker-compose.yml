version: "3.7"
services:
  app:
    build:
      dockerfile: ./docker/java/Dockerfile
      context: .
    command: /bin/sh -c "/app/mvnw clean spring-boot:run"
    environment:
      - FRONTEND_CLIENT=localhost:3000
      - AXON_AXONSERVER_SERVERS=axon-server
      - AXON_PORT=8124
    volumes:
      - .:/app
      - ./storage/java-cache:/home/java/.m2
    ports:
      - "8080:8080"
    depends_on:
      - axon-server
    networks:
      - stapi

  fixtures:
    build:
      dockerfile: ./docker/java/Dockerfile
      context: .
    command: /bin/sh -c "/wait-for-axon.sh && /app/mvnw clean spring-boot:run -Dspring-boot.run.arguments=system-model -Dspring-boot.run.jvmArguments="-Dserver.port=8081" -Dspring-boot.run.profiles=generate-fixtures"
    environment:
      - AXON_AXONSERVER_SERVERS=axon-server
      - AXON_PORT=8124
    volumes:
      - .:/app
      - ./storage/java-cache:/home/java/.m2
    ports:
      - "8081:8081"
    depends_on:
      - axon-server
    networks:
      - stapi

  axon-server:
    image: axoniq/axonserver
    environment:
      - AXONSERVER_EVENTSTORE=/eventstore
      - AXONSERVER_CONTROLDB=/controldb
      - AXONSERVER_HOSTNAME=axon-server
      - AXONSERVER_NAME=axon-server
    volumes:
      - axon-server-eventstore-stapi:/eventstore
      - axon-server-controldb-stapi:/controldb
    ports:
      - "8024:8024"
      - "8124:8124"
    networks:
      - stapi
  stapi-admin:
    image: standardapi/admin:1.0
    environment:
      - NEXT_PUBLIC_HOST_API=https://api-dev-minimal-v5.vercel.app
      - NEXT_PUBLIC_ASSETS_API=https://api-dev-minimal-v5.vercel.app
      - NEXT_PUBLIC_STAPI_SERVER=http://localhost:8080
    ports:
      - "3000:3000"
    networks:
      - stapi

volumes:
  axon-server-eventstore-stapi:
  axon-server-controldb-stapi:

networks:
  stapi:
